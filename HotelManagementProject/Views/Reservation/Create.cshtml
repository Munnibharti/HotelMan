@model HotelManagementProject.Models.ReservationViewModel

@{
    ViewData["Title"] = "Create Reservation";
}

<h1 class="text-center">Create Reservation</h1>

@using (Html.BeginForm("Create", "Reservation", FormMethod.Post, new { @class = "reservation-form" }))
{
    @Html.AntiForgeryToken()

    <div class="card mx-auto" style="max-width: 600px; border: 1px solid #ddd; padding: 20px; box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);">
        <div class="card-body">
            <h4 class="card-title text-center">Reservation Details</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <!-- Guest Dropdown -->
            <div class="form-group">
                @Html.LabelFor(model => model.Reservation.GuestEmail, "Guest Email", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.Reservation.GuestEmail, Model.GuestEmails, "-- Select Guest --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Reservation.GuestEmail, "", new { @class = "text-danger" })
            </div>

            <!-- Room Number Dropdown -->
            <div class="form-group">
                @Html.LabelFor(model => model.Reservation.RoomNumber, "Room Number", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.Reservation.RoomNumber, Model.RoomNumbers, "-- Select Room --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Reservation.RoomNumber, "", new { @class = "text-danger" })
            </div>

            <!-- Payment Method Dropdown -->
            <div class="form-group">
                @Html.LabelFor(model => model.Reservation.PaymentMethod, "Payment Method", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.Reservation.PaymentMethod, Model.PaymentMethods, "-- Select Payment Method --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Reservation.PaymentMethod, "", new { @class = "text-danger" })
            </div>

            <!-- Check-In Date -->
            <div class="form-group">
                @Html.LabelFor(model => model.Reservation.CheckInDate, new { @class = "control-label" })
                @Html.TextBoxFor(model => model.Reservation.CheckInDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(model => model.Reservation.CheckInDate, "", new { @class = "text-danger" })
            </div>

            <!-- Check-Out Date -->
            <div class="form-group">
                @Html.LabelFor(model => model.Reservation.CheckOutDate, new { @class = "control-label" })
                @Html.TextBoxFor(model => model.Reservation.CheckOutDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                @Html.ValidationMessageFor(model => model.Reservation.CheckOutDate, "", new { @class = "text-danger" })
            </div>

            <!-- Total Amount -->
            <div class="form-group">
                @Html.LabelFor(model => model.Reservation.TotalAmount, new { @class = "control-label" })
                @Html.TextBoxFor(model => model.Reservation.TotalAmount, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Reservation.TotalAmount, "", new { @class = "text-danger" })
            </div>

            <!-- Submit Button -->
            <div class="form-group text-center">
                <input type="submit" value="Create Reservation" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div class="text-center mt-3">
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

<!-- Client-Side Validation Script -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var form = document.querySelector("form");
        form.addEventListener("submit", function (event) {
            var checkInDate = new Date(document.querySelector("#Reservation_CheckInDate").value);
            var checkOutDate = new Date(document.querySelector("#Reservation_CheckOutDate").value);

            if (checkOutDate <= checkInDate) {
                event.preventDefault();
                alert("Check-out date must be greater than the check-in date.");
            }
        });
    });
</script>
